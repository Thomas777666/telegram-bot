import random
from user import get_user, update_user

MIN_BET = 400

def check_bet(user_id, amount):
    user = get_user(user_id)
    if not user:
        return False, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω."
    if amount < MIN_BET:
        return False, f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ ‚Äî {MIN_BET} ‚Ç°."
    if amount > user['casino_money']:
        return False, "–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∞–∑–∏–Ω–æ-–¥–µ–Ω—å–≥–∏."
    return True, None

def update_balance(user_id, amount):
    user = get_user(user_id)
    if user:
        user['casino_money'] += amount
        from user import update_user
        update_user(user_id, user)

def casino_5050(user_id, bet):
    ok, err = check_bet(user_id, bet)
    if not ok:
        return False, err
    win = random.choice([True, False])
    if win:
        update_balance(user_id, bet)
        return True, f"–¢—ã –≤—ã–∏–≥—Ä–∞–ª {bet} ‚Ç°! –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω."
    else:
        update_balance(user_id, -bet)
        return False, f"–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª {bet} ‚Ç°."

def slots(user_id, bet):
    ok, err = check_bet(user_id, bet)
    if not ok:
        return False, err
    symbols = ["üçí", "üçã", "üçâ", "‚≠ê", "üîî", "üíé"]
    reel = [random.choice(symbols) for _ in range(3)]
    counts = {}
    for s in reel:
        counts[s] = counts.get(s, 0) + 1
    payout = 0
    if 3 in counts.values():
        payout = bet * 5
    elif 2 in counts.values():
        payout = bet * 2
    update_balance(user_id, payout - bet)
    res = " | ".join(reel)
    if payout > 0:
        return True, f"üé∞ {res}\n–¢—ã –≤—ã–∏–≥—Ä–∞–ª {payout} ‚Ç°!"
    else:
        return False, f"üé∞ {res}\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª {bet} ‚Ç°."

def coin_flip(user_id, bet, choice):
    ok, err = check_bet(user_id, bet)
    if not ok:
        return False, err
    result = random.choice(["–æ—Ä—ë–ª", "—Ä–µ—à–∫–∞"])
    if choice == result:
        update_balance(user_id, bet)
        return True, f"–ú–æ–Ω–µ—Ç–∫–∞ —É–ø–∞–ª–∞ –Ω–∞ {result}! –¢—ã –≤—ã–∏–≥—Ä–∞–ª {bet} ‚Ç°."
    else:
        update_balance(user_id, -bet)
        return False, f"–ú–æ–Ω–µ—Ç–∫–∞ —É–ø–∞–ª–∞ –Ω–∞ {result}. –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª {bet} ‚Ç°."

def dice(user_id, bet):
    ok, err = check_bet(user_id, bet)
    if not ok:
        return False, err
    user_roll = random.randint(1, 6)
    bot_roll = random.randint(1, 6)
    if user_roll > bot_roll:
        update_balance(user_id, bet)
        return True, f"–¢—ã –±—Ä–æ—Å–∏–ª {user_roll}, –±–æ—Ç ‚Äî {bot_roll}. –¢—ã –≤—ã–∏–≥—Ä–∞–ª {bet} ‚Ç°!"
    elif user_roll < bot_roll:
        update_balance(user_id, -bet)
        return False, f"–¢—ã –±—Ä–æ—Å–∏–ª {user_roll}, –±–æ—Ç ‚Äî {bot_roll}. –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª {bet} ‚Ç°."
    else:
        return None, f"–ù–∏—á—å—è! –û–±–∞ –±—Ä–æ—Å–∏–ª–∏ {user_roll}. –ë–∞–ª–∞–Ω—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è."

def guess_number(user_id, bet, guess):
    ok, err = check_bet(user_id, bet)
    if not ok:
        return False, err
    answer = random.randint(1, 5)
    if guess == answer:
        update_balance(user_id, bet * 3)
        return True, f"–¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {answer}! –í—ã–∏–≥—Ä—ã—à: {bet*3} ‚Ç°."
    else:
        update_balance(user_id, -bet)
        return False, f"–ù–µ–≤–µ—Ä–Ω–æ. –ë—ã–ª–æ {answer}. –ü—Ä–æ–∏–≥—Ä—ã—à: {bet} ‚Ç°."

def duel(user1_id, user2_id, bet):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å—Ç–∞–≤–æ–∫
    user1 = get_user(user1_id)
    user2 = get_user(user2_id)
    if not user1 or not user2:
        return False, "–û–¥–∏–Ω –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω."
    if bet < MIN_BET:
        return False, f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ ‚Äî {MIN_BET} ‚Ç°."
    if user1['casino_money'] < bet or user2['casino_money'] < bet:
        return False, "–£ –æ–¥–Ω–æ–≥–æ –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥."
    # –†–∞–Ω–¥–æ–º–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    winner = random.choice([user1_id, user2_id])
    loser = user2_id if winner == user1_id else user1_id
    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã
    update_balance(winner, bet)
    update_balance(loser, -bet)
    if winner == user1_id:
        return True, f"–¢—ã –≤—ã–∏–≥—Ä–∞–ª –¥—É—ç–ª—å –∏ –ø–æ–ª—É—á–∏–ª {bet} ‚Ç°!"
    else:
        return False, f"–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª –¥—É—ç–ª—å –∏ –ø–æ—Ç–µ—Ä—è–ª {bet} ‚Ç°."
